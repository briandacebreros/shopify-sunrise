<style>
    
</style>

<div class="bg-white">
    <div class="max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8">
  
      <div class="grid grid-cols-1" style="max-width: 240px; width: 220px;">
        <div class="group relative product-item-container">
          <div class="imagen-producto">
            <a class="product-item-image" href="{{ card_product.url }}"
                style="background: url({{ card_product.featured_media.image | img_url: '1500x' }}) no-repeat center center; background-size: cover;">
            </a>
          </div>
          <div class="descripcion flex justify-between">
            <div>
              <h3 class="text-sm text-gray-700">
                <a href="{{ card_product.url }}">
                  <h4>{{ card_product.title }}</h4>
                </a>
              </h3>
              <p class="subtitle">
                {%- for field in card_product.metafields.descriptors.subtitle -%}
                  {{ field | truncate: 35 }}
                {%- endfor -%}
              </p>
            </div>
            <!--<p class="text-sm font-medium text-gray-900">{{ card_product.price | money }}</p>-->
          </div>
          <div class="flex justify-between mt-5">
            <a class="button button-details" href="{{ card_product.url }}">Show details</a>


            <div x-data="{ 
              qty: 1,
              addToCart(){
                let formData = new FormData($refs.product_form);

                fetch('/cart/add.js', {
                    method: 'POST',
                    body: formData
                  })
                  .then(response => {
                    return response.json();
                  })
                  .then(response => {
                    this.$dispatch('cart-updated');
                    this.$dispatch('toggle-cart');
                  })
                  .catch((error) => {
                    console.error('Error:', error);
                  });

              }
            }"
            @quantity-changed.window="qty = $event.detail.quantity"
            >
           
              {%- form 'product', card_product, id: product_form_id, class: 'form', novalidate: 'novalidate', x-ref: 'product_form' -%}
                <input type="hidden" name="id" value="{{ card_product.selected_or_first_available_variant.id }}">
                <input type="hidden" name="quantity" x-model="qty" value="1">
                <div class="product-form__buttons">
                  <button
                    type="button"
                    name="add"
                    @click="addToCart()"
                    class="button-buynow"
                  {% if card_product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                  >
                      <span>
                        {%- if card_product.selected_or_first_available_variant.available -%}
                          {{ 'products.product.add_to_cart' | t }}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </span>
                  </button>
                  {%- if block.settings.show_dynamic_checkout -%}
                    {{ form | payment_button }}
                  {%- endif -%}
                </div>
              {%- endform -%}

            {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

            {%- assign pick_up_availabilities = card_product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

            <pickup-availability class="product__pickup-availabilities no-js-hidden"
              {% if card_product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
              data-root-url="{{ routes.root_url }}"
              data-variant-id="{{ card_product.selected_or_first_available_variant.id }}"
              data-has-only-default-variant="{{ card_product.has_only_default_variant }}"
            >
              <template>
                <pickup-availability-preview class="pickup-availability-preview">
                  {% render 'icon-unavailable' %}
                  <div class="pickup-availability-info">
                    <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                    <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                  </div>
                </pickup-availability-preview>
              </template>
            </pickup-availability>
          </div>

          <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>






          </div>





        </div>
  
        <!-- More products... -->
      </div>
    </div>
  </div>